(()=>{"use strict";var n={797:(n,r,e)=>{e.d(r,{Z:()=>p});var t=e(537),o=e.n(t),i=e(645),a=e.n(i),A=e(667),s=e.n(A),l=new URL(e(796),e.b),c=a()(o()),d=s()(l);c.push([n.id,"#form{\r\n    width: max(40%, 250px);\r\n    height: 50vh;\r\n    position: absolute;\r\n    top: 20%;\r\n    left: 50%;\r\n    margin-left: calc(-1 * max(40%, 250px) * 0.5);\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    background-color: var(--background);\r\n    border: solid 2px var(--blue);\r\n}\r\n\r\n#form > *{\r\n    display: block;\r\n}\r\n#form > textarea{\r\n    height: 50%;\r\n}\r\n#form > button[type = 'submit']{\r\n    width: 20%;\r\n    height: 10%;\r\n    background-color: var(--blue);\r\n    border: none;\r\n    border-left: 5px solid var(--pink);\r\n}\r\n#closeButton{\r\n    position: absolute;\r\n    width: 20px;\r\n    height: 20px;\r\n    border: none;\r\n    background-color: transparent;\r\n    background-image: url("+d+");\r\n    background-position: center;\r\n    background-size: contain;\r\n    top: 0%;\r\n    right: 0%;\r\n}\r\n#closeButton:hover{\r\n    animation: rotate 1s ease-in 100ms 1 forwards;\r\n}\r\n@keyframes rotate {\r\n    100%{\r\n        transform: rotate(360deg);\r\n    }\r\n}","",{version:3,sources:["webpack://./src/createForm.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,6CAA6C;IAC7C,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;IAC7B,mCAAmC;IACnC,6BAA6B;AACjC;;AAEA;IACI,cAAc;AAClB;AACA;IACI,WAAW;AACf;AACA;IACI,UAAU;IACV,WAAW;IACX,6BAA6B;IAC7B,YAAY;IACZ,kCAAkC;AACtC;AACA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,6BAA6B;IAC7B,yDAAoC;IACpC,2BAA2B;IAC3B,wBAAwB;IACxB,OAAO;IACP,SAAS;AACb;AACA;IACI,6CAA6C;AACjD;AACA;IACI;QACI,yBAAyB;IAC7B;AACJ",sourcesContent:["#form{\r\n    width: max(40%, 250px);\r\n    height: 50vh;\r\n    position: absolute;\r\n    top: 20%;\r\n    left: 50%;\r\n    margin-left: calc(-1 * max(40%, 250px) * 0.5);\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    background-color: var(--background);\r\n    border: solid 2px var(--blue);\r\n}\r\n\r\n#form > *{\r\n    display: block;\r\n}\r\n#form > textarea{\r\n    height: 50%;\r\n}\r\n#form > button[type = 'submit']{\r\n    width: 20%;\r\n    height: 10%;\r\n    background-color: var(--blue);\r\n    border: none;\r\n    border-left: 5px solid var(--pink);\r\n}\r\n#closeButton{\r\n    position: absolute;\r\n    width: 20px;\r\n    height: 20px;\r\n    border: none;\r\n    background-color: transparent;\r\n    background-image: url('./close.png');\r\n    background-position: center;\r\n    background-size: contain;\r\n    top: 0%;\r\n    right: 0%;\r\n}\r\n#closeButton:hover{\r\n    animation: rotate 1s ease-in 100ms 1 forwards;\r\n}\r\n@keyframes rotate {\r\n    100%{\r\n        transform: rotate(360deg);\r\n    }\r\n}"],sourceRoot:""}]);const p=c},839:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(537),o=e.n(t),i=e(645),a=e.n(i)()(o());a.push([n.id,"#content > button{\r\n    --width: 7vh;\r\n    width: var(--width);\r\n    height: 7vh;\r\n    border-radius: 50%;\r\n    background-color: var(--pink);\r\n    border: none;\r\n    position: relative;\r\n    left: 50%;\r\n    margin-left: calc(-1 * var(--width) * 0.5);\r\n    top: 10px;\r\n    transition: 1s;\r\n    font-weight: 1000;\r\n    font-size: 1rem;\r\n    color: white;\r\n}\r\n\r\n#content > button:hover{\r\n    --width: 21vh;\r\n    border-radius: 15px;\r\n}\r\n#content > button:hover::after{\r\n    content: ' Add Task';\r\n    animation: fadein 1100ms ease-in 0s 1 forwards;\r\n    font-weight: 100;\r\n    font-size: 1rem;\r\n}\r\n@keyframes fadein {\r\n    0%{\r\n        opacity: 0;\r\n    }\r\n    100%{\r\n        opacity: 1;\r\n    }\r\n}\r\n#listContainer{\r\n    position: absolute;\r\n    top: 23%;\r\n    height: 2px;\r\n    background-color: inherit;\r\n    width: 80%;\r\n    left: 50%;\r\n    margin-left: calc(-40%);\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    height: max-content;\r\n}\r\n\r\n#listContainer > div{\r\n    box-sizing: border-box;\r\n    height: 5vh;\r\n    width: 100%;\r\n    background-color: white;\r\n    border: solid 1px var(--blue);\r\n    padding: 0px 5px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    line-height: 5vh;\r\n    display: grid;\r\n    grid-template-columns: 10fr 1fr;\r\n    justify-content: space-between;\r\n}\r\n#listContainer > div > div{\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n#listContainer > div button{\r\n    box-sizing: border-box;\r\n    height: min(90%, 53px);\r\n    background-color: transparent;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n}","",{version:3,sources:["webpack://./src/listCreator.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,mBAAmB;IACnB,WAAW;IACX,kBAAkB;IAClB,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;IAClB,SAAS;IACT,0CAA0C;IAC1C,SAAS;IACT,cAAc;IACd,iBAAiB;IACjB,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;AACA;IACI,oBAAoB;IACpB,8CAA8C;IAC9C,gBAAgB;IAChB,eAAe;AACnB;AACA;IACI;QACI,UAAU;IACd;IACA;QACI,UAAU;IACd;AACJ;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,WAAW;IACX,yBAAyB;IACzB,UAAU;IACV,SAAS;IACT,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;IACtB,WAAW;IACX,WAAW;IACX,uBAAuB;IACvB,6BAA6B;IAC7B,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,gBAAgB;IAChB,aAAa;IACb,+BAA+B;IAC/B,8BAA8B;AAClC;AACA;IACI,sBAAsB;IACtB,WAAW;IACX,YAAY;AAChB;AACA;IACI,sBAAsB;IACtB,sBAAsB;IACtB,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;IAClB,4BAA4B;IAC5B,2BAA2B;AAC/B",sourcesContent:["#content > button{\r\n    --width: 7vh;\r\n    width: var(--width);\r\n    height: 7vh;\r\n    border-radius: 50%;\r\n    background-color: var(--pink);\r\n    border: none;\r\n    position: relative;\r\n    left: 50%;\r\n    margin-left: calc(-1 * var(--width) * 0.5);\r\n    top: 10px;\r\n    transition: 1s;\r\n    font-weight: 1000;\r\n    font-size: 1rem;\r\n    color: white;\r\n}\r\n\r\n#content > button:hover{\r\n    --width: 21vh;\r\n    border-radius: 15px;\r\n}\r\n#content > button:hover::after{\r\n    content: ' Add Task';\r\n    animation: fadein 1100ms ease-in 0s 1 forwards;\r\n    font-weight: 100;\r\n    font-size: 1rem;\r\n}\r\n@keyframes fadein {\r\n    0%{\r\n        opacity: 0;\r\n    }\r\n    100%{\r\n        opacity: 1;\r\n    }\r\n}\r\n#listContainer{\r\n    position: absolute;\r\n    top: 23%;\r\n    height: 2px;\r\n    background-color: inherit;\r\n    width: 80%;\r\n    left: 50%;\r\n    margin-left: calc(-40%);\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    height: max-content;\r\n}\r\n\r\n#listContainer > div{\r\n    box-sizing: border-box;\r\n    height: 5vh;\r\n    width: 100%;\r\n    background-color: white;\r\n    border: solid 1px var(--blue);\r\n    padding: 0px 5px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    line-height: 5vh;\r\n    display: grid;\r\n    grid-template-columns: 10fr 1fr;\r\n    justify-content: space-between;\r\n}\r\n#listContainer > div > div{\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n#listContainer > div button{\r\n    box-sizing: border-box;\r\n    height: min(90%, 53px);\r\n    background-color: transparent;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n}"],sourceRoot:""}]);const A=a},43:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(537),o=e.n(t),i=e(645),a=e.n(i)()(o());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Dancing+Script&display=swap);"]),a.push([n.id,"nav{\r\n    box-sizing: border-box;\r\n    height: 10%;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background-color: white;\r\n    box-shadow: 0px 5px  5px var(--pink);\r\n    position:sticky;\r\n    padding: 0px 10px;\r\n}\r\n#logo{\r\n    height: 100%;\r\n    width: 10%;\r\n    background-color: inherit;\r\n    text-align: center;\r\n    font-family: 'Dancing Script', fantasy, cursive;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\nnav button{\r\n    box-sizing: border-box;\r\n    font-size: 1.2rem;\r\n    background-color: inherit;\r\n    border: none\r\n}\r\nnav button:hover{\r\n    border-bottom: solid 2px var(--blue);\r\n}","",{version:3,sources:["webpack://./src/nav.css"],names:[],mappings:"AACA;IACI,sBAAsB;IACtB,WAAW;IACX,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,uBAAuB;IACvB,oCAAoC;IACpC,eAAe;IACf,iBAAiB;AACrB;AACA;IACI,YAAY;IACZ,UAAU;IACV,yBAAyB;IACzB,kBAAkB;IAClB,+CAA+C;IAC/C,aAAa;IACb,mBAAmB;AACvB;AACA;IACI,sBAAsB;IACtB,iBAAiB;IACjB,yBAAyB;IACzB;AACJ;AACA;IACI,oCAAoC;AACxC",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Dancing+Script&display=swap');\r\nnav{\r\n    box-sizing: border-box;\r\n    height: 10%;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background-color: white;\r\n    box-shadow: 0px 5px  5px var(--pink);\r\n    position:sticky;\r\n    padding: 0px 10px;\r\n}\r\n#logo{\r\n    height: 100%;\r\n    width: 10%;\r\n    background-color: inherit;\r\n    text-align: center;\r\n    font-family: 'Dancing Script', fantasy, cursive;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\nnav button{\r\n    box-sizing: border-box;\r\n    font-size: 1.2rem;\r\n    background-color: inherit;\r\n    border: none\r\n}\r\nnav button:hover{\r\n    border-bottom: solid 2px var(--blue);\r\n}"],sourceRoot:""}]);const A=a},426:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(537),o=e.n(t),i=e(645),a=e.n(i)()(o());a.push([n.id,":root{\r\n    --lightBackground: ivory;\r\n    --darkBackground: black;\r\n    --background: var(--lightBackground);\r\n    --pink: #E5C1CD;\r\n    --blue: #AAC9CE;\r\n    --typeContainerFont: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    background-color: var(--lightBackground);\r\n    font-size: 16px;\r\n}\r\nhtml{\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\nbody{\r\n    height: 100vh;\r\n    width: 100vw;\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n#content{\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,wBAAwB;IACxB,uBAAuB;IACvB,oCAAoC;IACpC,eAAe;IACf,eAAe;IACf,gJAAgJ;IAChJ,wCAAwC;IACxC,eAAe;AACnB;AACA;IACI,UAAU;IACV,SAAS;AACb;AACA;IACI,aAAa;IACb,YAAY;IACZ,sBAAsB;IACtB,UAAU;IACV,SAAS;AACb;AACA;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;IACtB,WAAW;IACX,YAAY;AAChB",sourcesContent:[":root{\r\n    --lightBackground: ivory;\r\n    --darkBackground: black;\r\n    --background: var(--lightBackground);\r\n    --pink: #E5C1CD;\r\n    --blue: #AAC9CE;\r\n    --typeContainerFont: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    background-color: var(--lightBackground);\r\n    font-size: 16px;\r\n}\r\nhtml{\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\nbody{\r\n    height: 100vh;\r\n    width: 100vw;\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n#content{\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n"],sourceRoot:""}]);const A=a},847:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(537),o=e.n(t),i=e(645),a=e.n(i)()(o());a.push([n.id,"#typeContainer{\r\n    height: 50vh;\r\n    width: max(40%, 250px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    gap: 10%;\r\n    position: absolute;\r\n    top: 50%;\r\n    margin-top: calc(-1 * 50vh * 0.5);\r\n    left: 50%;\r\n    margin-left: calc(-1 * max(40%, 250px) * 0.5);\r\n}\r\n#typeContainer > button{\r\n    width: 95%;\r\n    height: 20%;\r\n    background-color: pink;\r\n    color: black;\r\n    border: none;\r\n    border-left: solid 5px var(--blue);\r\n    font-family: var(--typeContainerFont);\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    box-sizing: border-box;\r\n    display: block;\r\n}\r\n#typeContainer > button:hover{\r\n    transition: 0.5s ;\r\n    transform: translateY(-10px);\r\n}","",{version:3,sources:["webpack://./src/todoType.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,8BAA8B;IAC9B,QAAQ;IACR,kBAAkB;IAClB,QAAQ;IACR,iCAAiC;IACjC,SAAS;IACT,6CAA6C;AACjD;AACA;IACI,UAAU;IACV,WAAW;IACX,sBAAsB;IACtB,YAAY;IACZ,YAAY;IACZ,kCAAkC;IAClC,qCAAqC;IACrC,eAAe;IACf,gBAAgB;IAChB,sBAAsB;IACtB,cAAc;AAClB;AACA;IACI,iBAAiB;IACjB,4BAA4B;AAChC",sourcesContent:["#typeContainer{\r\n    height: 50vh;\r\n    width: max(40%, 250px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    gap: 10%;\r\n    position: absolute;\r\n    top: 50%;\r\n    margin-top: calc(-1 * 50vh * 0.5);\r\n    left: 50%;\r\n    margin-left: calc(-1 * max(40%, 250px) * 0.5);\r\n}\r\n#typeContainer > button{\r\n    width: 95%;\r\n    height: 20%;\r\n    background-color: pink;\r\n    color: black;\r\n    border: none;\r\n    border-left: solid 5px var(--blue);\r\n    font-family: var(--typeContainerFont);\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    box-sizing: border-box;\r\n    display: block;\r\n}\r\n#typeContainer > button:hover{\r\n    transition: 0.5s ;\r\n    transform: translateY(-10px);\r\n}"],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);t&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),r.push(c))}},r}},667:n=>{n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(a).concat([i]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var i={},a=[],A=0;A<n.length;A++){var s=n[A],l=t.base?s[0]+t.base:s[0],c=i[l]||0,d="".concat(l," ").concat(c);i[l]=c+1;var p=e(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var C=o(u,t);t.byIndex=A,r.splice(A,0,{identifier:d,updater:C,references:1})}a.push(d)}return a}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=e(i[a]);r[A].references--}for(var s=t(n,o),l=0;l<i.length;l++){var c=e(i[l]);0===r[c].references&&(r[c].updater(),r.splice(c,1))}i=s}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},796:(n,r,e)=>{n.exports=e.p+"1b1953e35dfa96cbb675.png"}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var i=r[t]={id:t,exports:{}};return n[t](i,i.exports,e),i.exports}e.m=n,e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var r=e.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var t=r.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var n=e(379),r=e.n(n),t=e(795),o=e.n(t),i=e(569),a=e.n(i),A=e(565),s=e.n(A),l=e(216),c=e.n(l),d=e(589),p=e.n(d),u=e(43),C={};C.styleTagTransform=p(),C.setAttributes=s(),C.insert=a().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=c(),r()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;var h=e(847),g={};g.styleTagTransform=p(),g.setAttributes=s(),g.insert=a().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=c(),r()(h.Z,g),h.Z&&h.Z.locals&&h.Z.locals;var b=e(797),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=c(),r()(b.Z,m),b.Z&&b.Z.locals&&b.Z.locals;const f=function(n){let r;try{r=window[n];const e="__storage_test__";return r.setItem(e,e),r.removeItem(e),!0}catch(n){return n instanceof DOMException&&(22===n.code||1014===n.code||"QuotaExceededError"===n.name||"NS_ERROR_DOM_QUOTA_REACHED"===n.name)&&r&&0!==r.length}},B=e.p+"cb5211d74fddfa01d3ff.png";let I,v=[],y=[],x=[];var k=e(839),w={};w.styleTagTransform=p(),w.setAttributes=s(),w.insert=a().bind(null,"head"),w.domAPI=o(),w.insertStyleElement=c(),r()(k.Z,w),k.Z&&k.Z.locals&&k.Z.locals;let S=document.getElementById("content");const E=function(n){S.innerHTML="",S.appendChild(Y()),(()=>{let n=document.createElement("div");n.setAttribute("id","listContainer"),S.appendChild(n)})(),(n=>{let r=function(n){let r=document.createElement("form");r.setAttribute("id","form"),r.style.display="none";let e=document.createElement("input"),t=document.createElement("textarea"),o=document.createElement("fieldset"),i=document.createElement("legend"),a=document.createElement("button"),A=document.createElement("button");A.setAttribute("id","closeButton"),A.addEventListener("click",(()=>r.style.display="none"));let s=function(n,r,e,t){return{priority:n,name:r,type:e,id:t}},l=[];l[0]=s("High","listPriorities","radio","High"),l[1]=s("Medium","listPriorities","radio","Medium"),l[2]=s("Low","listPriorities","radio","Low"),i.textContent="Priority",o.appendChild(i),e.setAttribute("type","text"),e.setAttribute("placeholder","Task Title"),e.setAttribute("id","title"),e.setAttribute("required",""),e.setAttribute("maxlength",50),e.setAttribute("title","Required, Maximum of 50 characters"),t.setAttribute("placeholder","description"),t.setAttribute("id","Description"),t.setAttribute("maxlength",120),t.setAttribute("title","Maximum of 120 characters");for(let n=0;n<l.length;n++){let r=document.createElement("input"),e=document.createElement("label");e.textContent=l[n].priority,e.setAttribute("for",l[n].id),r.setAttribute("required",""),r.setAttribute("name",l[n].name),r.setAttribute("type",l[n].type),r.setAttribute("id",l[n].id),o.appendChild(e),o.appendChild(r)}function c(n,r,e){return{title:n,description:r,priority:e}}function d(){let n=document.getElementsByName("listPriorities");for(let r=0;r<n.length;r++){if(n[r].checked&&0==r)return"High";if(n[r].checked&&1==r)return"Medium";if(n[r].checked&&2==r)return"Low"}}function p(n){n==v?I="personalList":n==y?I="workList":n==x&&(I="schoolList");let r=document.getElementById("listContainer");r.innerHTML="";for(let e=0;e<n.length;e++){let t=document.createElement("div"),o=document.createElement("div");o.textContent=`${n[e].title}: ${n[e].description}`;let i=document.createElement("button");i.style.backgroundImage=`url(${B})`,i.style.display="none","High"==n[e].priority&&(t.style.borderLeft="solid 5px red"),"Medium"==n[e].priority&&(t.style.borderLeft="solid 5px orange"),"Low"==n[e].priority&&(t.style.borderLeft="solid 5px Lime"),t.setAttribute("title",`Priority: ${n[e].priority}`),o.addEventListener("click",(function(){"10vh"==r.childNodes[e].style.height?(r.childNodes[e].style.height="5vh",i.style.display="none"):(r.childNodes[e].style.height="10vh",i.style.display="block")})),o.addEventListener("dblclick",(function(){1==n.length&&localStorage.removeItem(`${I}`),n.splice(e,1),p(n)})),i.addEventListener("click",(function(){1==n.length&&localStorage.removeItem(`${I}`),n.splice(e,1),p(n)})),t.appendChild(o),t.appendChild(i),r.appendChild(t),localStorage.setItem(`${I}`,JSON.stringify(n))}}var u;return a.setAttribute("type","submit"),a.setAttribute("name","submit"),a.textContent="Add",function(){for(let n=0;n<arguments.length;n++)r.appendChild(arguments[n]);content.appendChild(r)}(A,e,t,o,a),u=n,f("localStorage")&&localStorage.getItem("personalList")&&(v=JSON.parse(localStorage.getItem("personalList")),"personal"===u&&p(v)),f("localStorage")&&localStorage.getItem("workList")&&(y=JSON.parse(localStorage.getItem("workList")),"work"===u&&p(y)),f("localStorage")&&localStorage.getItem("schoolList")&&(x=JSON.parse(localStorage.getItem("schoolList")),"school"===u&&p(x)),r.addEventListener("submit",(function(o){!function(n){"personal"==n&&(v[v.length]=c(e.value,t.value,d()),p(v)),"work"==n&&(y[y.length]=c(e.value,t.value,d()),p(y)),"school"==n&&(x[x.length]=c(e.value,t.value,d()),p(x))}(n),o.preventDefault(),r.reset()})),r}(n),e=document.createElement("button");e.textContent="+",e.addEventListener("click",(function(){"none"==r.style.display?r.style.display="flex":r.style.display="none"})),S.appendChild(e)})(n)},L=function(){let n="Personal Work School".split(" "),r=document.createElement("div");r.setAttribute("id","typeContainer");for(let e=0;e<n.length;e++){let t=document.createElement("button");t.textContent=n[e],0==e&&t.addEventListener("click",(()=>{E("personal")})),1==e&&t.addEventListener("click",(()=>{E("work")})),2==e&&t.addEventListener("click",(()=>{E("school")})),r.appendChild(t)}return r};let T=document.getElementById("content");const Z=function(){let n=document.createElement("nav"),r=document.createElement("div");r.setAttribute("id","logo"),r.innerHTML="<h1>Oblige</h1>";let e=document.createElement("div"),t=document.createElement("button");return t.setAttribute("class","link"),t.textContent="back",t.addEventListener("click",(()=>{T.innerHTML="",T.appendChild(Z()),T.appendChild(L())})),e.appendChild(t),n.appendChild(r),n.appendChild(e),n},Y=Z;var z=e(426),U={};U.styleTagTransform=p(),U.setAttributes=s(),U.insert=a().bind(null,"head"),U.domAPI=o(),U.insertStyleElement=c(),r()(z.Z,U),z.Z&&z.Z.locals&&z.Z.locals;let j=document.getElementById("content");j.appendChild(Y()),j.appendChild(L())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,